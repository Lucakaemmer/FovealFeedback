import numpy as np

### Main Experiment
TIME_BLOCK = 11  # 11
TIME_WAIT = 4  # 4
N_BLOCKS = 20  # 20
N_RUNS = 5  # 5 -> indicates runs per condition
WARM_UP_TIME = 0
COOL_DOWN_TIME = 20
ITI = 0.5
JITTER = 0.2

# Screen Specification
SCREEN = 0
FULLSCREEN = True

MONITOR_DISTANCE = 123
#office=50, eye_tracker=60, PROPixx=123, MacBook=50
MONITOR_WIDTH = 30
#office=55, eye_tracker=55, PROPixx=30, MacBook=30.41
MONITOR_RESOLUTION = [1280, 1024]
#office=[1920, 1080], eye_tracker=[1920, 1080], PROPixx=[1280, 1024] with 180Hz, MacBook=[2560, 1664]
conv = 88.7 #43.3 #pixels per degree

TRIGGER_KEY = "5"
START_KEY = "space"
TERMINATION_KEY = "escape"

# Stimulus Information
STIMULUS_DIR = {}
STIMULUS_DIR["horn"] = "stimuli/horn.png"
STIMULUS_DIR["tiger"] = "stimuli/tiger.png"
STIMULUS_DIR["guitar"] = "stimuli/guitar.png"
STIMULUS_DIR["kangaroo"] = "stimuli/kangaroo.png"
STIMULUS_NAMES = ["horn", "tiger", "guitar", "kangaroo"]
STIMULUS_LIST = (STIMULUS_NAMES * (N_BLOCKS // len(STIMULUS_NAMES) + 1))[:N_BLOCKS]
STIMULUS_SIZE = 3 * conv

FIXATION_SIZE = 0.05 * conv
FIXATION_DISTANCE = 1 * conv
DISTANCE_FROM_STIMULUS = 6.5 * conv # Gaze distance (in degrees) for stimuli to disappear, has to be larger than 9.24 for a radius of 5
R = 4 * conv # Radius (in degrees) from middle fixation where stimuli appear
ANGLES = [(x * np.pi / 4) + (np.pi / 8) for x in range(8)]
STIMULUS_COORDINATES = [(R * np.cos(a), R * np.sin(a)) for a in ANGLES]
FOVEAL_COORDINATES = [(0, 0) for _ in STIMULUS_COORDINATES]

CONDITION_TEXT = "Please follow the stimulus with your eyes."
CONTROL_TEXT = "Please keep your eyes on the central fixation point."

STIMULUS_SEQUENCES = [
    [0, 4, 7, 3, 6, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 6, 3, 0, 4, 7, 2, 6, 2],  # 1
    [2, 6, 1, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6],  # 2
    [4, 0, 5, 1, 6, 2, 7, 3, 0, 4, 1, 5, 2, 7, 3, 6, 1, 4, 0, 5, 2, 7, 2],  # 3
    [6, 3, 7, 2, 5, 0, 4, 1, 6, 3, 7, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 4, 1],  # 4
    [2, 6, 1, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 0],  # 1
    [4, 0, 5, 1, 6, 2, 7, 3, 0, 4, 1, 5, 2, 7, 3, 6, 1, 4, 0, 5, 2, 7, 2],  # 2
    [6, 3, 7, 2, 5, 0, 4, 1, 6, 3, 7, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 4, 7],  # 3
    [0, 4, 7, 3, 6, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 6, 3, 0, 4, 7, 2, 6, 3],  # 4
    [4, 0, 5, 1, 6, 2, 7, 3, 0, 4, 1, 5, 2, 7, 3, 6, 1, 4, 0, 5, 2, 7, 3],  # 1
    [6, 3, 7, 2, 5, 0, 4, 1, 6, 3, 7, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 4, 0],  # 2
    [0, 4, 7, 3, 6, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 6, 3, 0, 4, 7, 2, 6, 3],  # 3
    [2, 6, 1, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6],  # 4
    [6, 3, 7, 2, 5, 0, 4, 1, 6, 3, 7, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 4, 7],  # 1
    [0, 4, 7, 3, 6, 2, 5, 1, 4, 0, 3, 7, 2, 5, 1, 6, 3, 0, 4, 7, 2, 6, 1],  # 2
    [2, 6, 1, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4, 7, 3, 7],  # 3
    [4, 0, 5, 1, 6, 2, 7, 3, 0, 4, 1, 5, 2, 7, 3, 6, 1, 4, 0, 5, 2, 7, 3],  # 4
    [3, 6, 2, 7, 4, 1, 5, 0, 3, 7, 2, 6, 1, 5, 0, 4, 7, 3, 6, 2, 5, 0, 4],  # 1
    [5, 1, 6, 2, 7, 4, 0, 5, 1, 6, 3, 7, 2, 5, 1, 6, 3, 0, 4, 7, 2, 6, 3],  # 2
    [7, 2, 5, 0, 3, 6, 1, 4, 7, 2, 5, 0, 3, 6, 1, 4, 7, 2, 5, 0, 3, 6, 2],  # 3
    [0, 3, 7, 2, 6, 1, 5, 0, 3, 7, 2, 6, 1, 4, 0, 5, 2, 7, 3, 6, 1, 4, 0],  # 4
]  # Has to be long enough to cover all possible stimulus presentations -> as many sequences as blocks, as many entries as stimulus presentations per block

### Localizers

# Object Localizer
OBJECTS_DIR = "localizer_images/objects"
SCRAMBLED_DIR = "localizer_images/scrambled"
OBJECT_SIZE = 10 * conv
FIXATION_TIME = 7.5
STIM_ON_TIME = 0.4
STIM_OFF_TIME = 0.35
N_BLOCKS_OBJ = 6
IMAGE_TYPE = ["objects", "scrambled", "objects", "scrambled"]
STIM_PRES = [
    24,
    44,
    19,
    46,
    26,
    33,
    30,
    38,
    27,
    11,
    17,
    47,
    14,
    44,
    45,
    26,
    46,
    23,
    13,
    16,
    41,
    36,
    39,
    3,
    3,
    35,
    35,
    15,
    42,
    43,
    18,
    29,
    20,
    25,
    14,
    22,
    39,
    47,
    27,
    41,
    45,
    10,
    28,
    40,
    21,
    38,
    13,
    36,
    7,
    31,
    42,
    27,
    16,
    43,
    19,
    24,
    8,
    34,
    1,
    1,
    14,
    3,
    22,
    47,
    47,
    38,
    42,
    37,
    23,
    12,
    20,
    11,
    14,
    7,
    17,
    46,
    35,
    18,
    29,
    10,
    28,
    27,
    19,
    5,
    26,
    32,
    45,
    30,
    43,
    31,
    7,
    4,
    25,
    36,
    41,
    23,
    14,
    32,
    5,
    6,
    15,
    30,
    30,
    1,
    34,
    44,
    13,
    42,
    33,
    9,
    37,
    29,
    0,
    6,
    6,
    40,
    10,
    10,
    28,
    18,
    12,
    35,
    26,
    41,
    30,
    46,
    31,
    33,
    44,
    1,
    15,
    4,
    0,
    13,
    19,
    22,
    23,
    25,
    31,
    8,
    9,
    17,
    34,
    47,
    5,
    1,
    0,
    16,
    18,
    6,
    23,
    10,
    17,
    37,
    42,
    5,
    25,
    0,
    22,
    40,
    38,
    18,
    18,
    14,
    28,
    33,
    17,
    20,
    7,
    24,
    32,
    23,
    30,
    29,
    43,
    43,
    9,
    47,
    25,
    36,
    20,
    13,
    15,
    37,
    1,
    24,
    40,
    43,
    17,
    12,
    6,
    39,
    2,
    33,
    31,
    13,
    36,
    36,
    16,
    29,
    35,
    32,
    28,
    21,
    4,
    14,
    41,
    23,
    20,
    0,
    12,
    17,
    8,
    27,
    22,
    1,
    38,
    30,
    45,
    6,
    16,
    31,
    24,
    43,
    7,
    33,
    21,
    44,
    14,
    14,
    37,
    5,
    17,
    9,
    8,
    24,
    10,
    41,
    4,
    30,
    18,
    18,
    1,
    26,
    32,
    44,
    15,
    36,
    37,
    20,
    16,
    16,
    12,
    42,
    30,
    21,
    21,
    44,
    25,
    40,
    36,
    8,
    2,
    5,
    45,
    1,
    37,
    47,
    3,
    22,
    13,
    6,
    42,
    33,
    28,
    10,
    7,
    0,
    8,
    40,
    29,
    9,
    19,
    25,
    21,
    46,
    18,
    11,
    26,
    38,
    5,
    39,
    40,
    4,
    20,
    34,
    33,
    35,
    6,
    11,
    41,
    27,
    16,
    46,
    18,
    18,
    23,
    29,
    39,
    8,
    47,
    12,
    40,
    36,
    46,
    4,
    42,
    2,
    3,
    25,
    43,
    7,
    6,
    39,
    9,
    24,
    41,
    44,
    44,
    0,
    16,
    35,
    19,
    22,
    27,
    7,
    21,
    12,
    46,
    43,
    9,
    4,
    10,
    17,
    41,
    40,
    0,
    45,
    11,
    33,
    43,
    38,
    14,
    24,
    28,
    34,
    18,
    18,
    31,
    4,
    2,
    5,
    11,
    6,
    6,
    42,
    26,
    3,
    21,
    8,
    35,
    2,
    29,
    45,
    46,
    44,
    33,
    25,
    5,
    36,
    22,
    39,
    24,
    41,
    37,
    15,
    8,
    28,
    40,
    12,
    16,
    2,
    32,
    45,
    29,
    46,
    6,
    21,
    5,
    31,
    35,
    11,
    38,
    15,
    3,
    3,
    47,
    34,
    44,
    45,
    13,
    39,
    25,
    25,
    27,
    27,
    19,
    16,
    12,
    9,
    34,
    20,
    39,
    3,
    0,
    45,
    4,
    23,
    38,
    27,
    8,
    31,
    10,
    37,
    3,
    19,
    2,
    18,
    29,
    34,
    27,
    9,
    35,
    23,
    37,
    15,
    24,
    14,
    38,
    26,
    26,
    19,
    21,
    3,
    28,
    36,
    12,
    7,
    7,
    22,
    34,
    32,
    10,
    1,
    3,
    28,
    26,
    26,
    13,
    9,
    20,
    39,
    47,
    2,
    30,
    11,
    22,
    32,
    17,
    34,
]

# Retinal Localizer
CYCLES_PER_DEGREE = 0.02
FLICKER_FREQUENCY = 5
RET_BLOCK_TIME = 30
MAX_RADIUS = 5 * conv
THICKNESS = 1 * conv
